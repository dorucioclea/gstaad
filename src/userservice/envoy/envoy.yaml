admin:
  access_log_path: /dev/null
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 8081
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 80
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              config:
                codec_type: auto
                stat_prefix: grpc_json
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            path: "/health"
                          direct_response:
                            status: 200
                        - match:
                            prefix: "/"
                            grpc: {}
                          route:
                            cluster: local_service
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    config:
                      providers:
                        cognito:
                          issuer: https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_USERPOOL_ID}
                          forward_payload_header: "x-jwt-payload"
                          payload_in_metadata: "x-jwt-payload"
                          from_headers:
                            - name: Authorization
                              value_prefix: "Bearer "
                          remote_jwks:
                            http_uri:
                              uri: https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_USERPOOL_ID}/.well-known/jwks.json
                              cluster: cognito|443
                            cache_duration:
                              seconds: 300
                      rules:           
                        - match:
                            prefix: /
                          requires:
                            allow_missing_or_failed: {}
                  - name: envoy.grpc_json_transcoder
                    config:
                      proto_descriptor: "/etc/envoy/pb/userservice.pb"
                      services:
                        - userservice.UserService
                      print_options:
                        add_whitespace: false
                        always_print_primitive_fields: false
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.router
                access_log:
                  - name: envoy.file_access_log
                    filter:
                      and_filter:
                        filters:
                          - not_health_check_filter: {}
                          - header_filter:
                              header:
                                name: "UserAgent"
                                prefix_match: "ELB-HealthChecker"
                    config:
                      path: /dev/stdout
                  - name: envoy.file_access_log
                    filter:
                      or_filter:
                        filters:
                          - status_code_filter:
                              comparison:
                                op: GE
                                value:
                                  default_value: 400
                                  runtime_key: access_log.access_error.status
                          - duration_filter:
                              comparison:
                                op: GE
                                value:
                                  default_value: 2000
                                  runtime_key: access_log.access_error.duration
                          - traceable_filter: {}
                    config:
                      path: /dev/stderr
  clusters:
    - name: local_service
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      hosts:
        - socket_address:
            protocol: TCP
            address: ${UPSTREAM}
            port_value: 8080
      health_checks:
        - timeout: 1s
          interval: 5s
          interval_jitter: 1s
          unhealthy_threshold: 3
          healthy_threshold: 3
          grpc_health_check: {}
    - name: cognito|443
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      connect_timeout: 20s
      lb_policy: ROUND_ROBIN
      hosts:
      - socket_address:
          address: cognito-idp.${AWS_REGION}.amazonaws.com
          port_value: 443
      tls_context: { sni: cognito-idp.${AWS_REGION}.amazonaws.com }