version: 2.1
orbs:
  aws-cli: circleci/aws-cli@0.1.7
  aws-ecs: circleci/aws-ecs@0.0.6
executors:
  default:
    machine:
      enabled: true
      docker_layer_caching: true
  golang:
    docker:
      - image: circleci/golang
commands:
  ecr_build_push:
    parameters:
      path:
        type: string
      dockerfile:
        type: string
      repo:
        type: string
    steps:
      - aws-cli/install
      - aws-cli/configure:
          aws-region: AWS_REGION
      - run:
          name: Build <<parameters.repo>>
          command: |
            docker build -t <<parameters.repo>> -f <<parameters.dockerfile>> <<parameters.path>>
      - run:
          name: Push <<parameters.repo>>
          command: |
            eval $(aws ecr get-login --region $AWS_REGION --no-include-email)
            ECR_REPO=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/<<parameters.repo>>
            docker tag <<parameters.repo>> $ECR_REPO:$GITHASH
            docker push $ECR_REPO:$GITHASH
            docker tag <<parameters.repo>> $ECR_REPO:latest
            docker push $ECR_REPO:latest
jobs:
  all:
    executor: <<parameters.executor>>
    parameters:
      executor:
        type: executor
        default: default
      service_name:
        type: string
      service_path:
        type: string
      build_steps:
        type: steps
        default: []
    steps:
      - checkout
      - run:
          name: githash
          command: |
            echo 'export GITHASH=$(git log --pretty=format:'%H' -n 1 -- <<parameters.service_path>> )' >> $BASH_ENV
      - setup_remote_docker
      - steps: <<parameters.build_steps>>
      - aws-ecs/update-service:
          family: gstaad-<<parameters.service_name>>
          cluster-name: gstaad
          service-name: <<parameters.service_name>>
          container-image-name-updates: 'tag=${GITHASH}'
workflows:
  postservice:
    jobs:
      - all:
          executor: golang
          service_name: postservice
          service_path: src/postservice
          build_steps:
            - ecr_build_push:
                path: src/postservice
                dockerfile: src/postservice/Dockerfile.gw
                repo: gstaad/postservice-gw
            - ecr_build_push:
                path: src/postservice
                dockerfile: src/postservice/Dockerfile
                repo: gstaad/postservice
  userservice:
    jobs:
      - all:
          executor: golang
          service_name: userservice
          service_path: src/userservice
          build_steps:
            - ecr_build_push:
                path: src/userservice
                dockerfile: src/userservice/Dockerfile.gw
                repo: gstaad/userservice-gw
            - ecr_build_push:
                path: src/userservice
                dockerfile: src/userservice/Dockerfile
                repo: gstaad/userservice
