version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@3.0.0
  aws-ecs: circleci/aws-ecs@0.0.6
executors:
  default:
    machine:
      enabled: true
      docker_layer_caching: true
  golang:
    docker:
      - image: circleci/golang
commands:
  build_and_deploy:
    parameters:
      enable:
        type: boolean
        default: true
      service_name:
        type: string
      service_path:
        type: string
      build_steps:
        type: steps
        default: []
    steps:
      - when:
          condition: <<parameters.enable>>
          steps:
            - setup_remote_docker
            - steps: <<parameters.build_steps>>
            - aws-ecs/update-service:
                family: gstaad-<<parameters.service_name>>
                cluster-name: gstaad
                service-name: <<parameters.service_name>>
            - save_cache:
                key: gstaad-{{ .Branch }}-{{ epoch }}
                paths:
                  - .meta
jobs:
  all:
    executor: <<parameters.executor>>
    parameters:
      executor:
        type: executor
        default: default
      service_name:
        type: string
      service_path:
        type: string
      build_steps:
        type: steps
        default: []
    steps:
      - checkout
      - restore_cache:
          keys:
            - gstaad-{{ .Branch }}
      - run:
          command: |
            mkdir -p .meta
            touch .meta/<<parameters.service_name>>.hash
            git log --pretty=format:'%H' -n 1 -- <<parameters.service_path>> > .meta/<<parameters.service_name>>.hash.new
            diff .meta/<<parameters.service_name>>.hash{,.new} > /dev/null
            [ $? ] && echo 'export DIFF=1' >> $BASH_ENV
      - build_and_deploy:
          enable: ${DIFF}
          service_name: <<parameters.service_name>>
          service_path: <<parameters.service_path>>
          build_steps: <<parameters.build_steps>>
      - save_cache:
          key: gstaad-{{ .Branch }}-{{ epoch }}
          paths:
            - .meta
workflows:
  postservice:
    jobs:
      - all:
          executor: golang
          service_name: postservice
          service_path: src/postservice
          build_steps:
            - aws-ecr/build-and-push-image:
                path: src/postservice
                dockerfile: src/postservice/Dockerfile.gw
                repo: gstaad/postservice-gw
                tag: ${CIRCLE_BRANCH}
            - aws-ecr/build-and-push-image:
                path: src/postservice
                dockerfile: src/postservice/Dockerfile
                repo: gstaad/postservice
                tag: ${CIRCLE_BRANCH}
  userservice:
    jobs:
      - diff:
          service_name: userservice
          service_path: src/userservice
      - build_and_deploy:
          enable: ${DIFF}
          executor: golang
          service_name: userservice
          service_path: src/userservice
          build_steps:
            - aws-ecr/build-and-push-image:
                path: src/userservice
                dockerfile: src/userservice/Dockerfile.gw
                repo: gstaad/userservice-gw
                tag: ${CIRCLE_BRANCH}
            - aws-ecr/build-and-push-image:
                path: src/userservice
                dockerfile: src/userservice/Dockerfile
                repo: gstaad/userservice
                tag: ${CIRCLE_BRANCH}
